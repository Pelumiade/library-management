services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # AMQP protocol
      - "15672:15672" # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network

  frontend_api:
    build:
      context: .
      dockerfile: frontend_api/Dockerfile
    container_name: frontend_api
    ports:
      - "8000:8000"
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - POSTGRES_SERVER=dpg-cuvihnij1k6c73ed8jc0-a
      - POSTGRES_USER=frontend
      - POSTGRES_PASSWORD=7rrbLCzFarSZrQ5ZHSLMOfLpfCrNTsj5f
      - POSTGRES_DB=lbs_frontend_api
      - POSTGRES_PORT=5432
      - DATABASE_URL=postgresql://frontend:rrbLCzFarSZrQ5ZHSLMOfLpfCrNTsj5f@dpg-cuvihnij1k6c73ed8jc0-a.oregon-postgres.render.com/lbs_frontend_api
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    volumes:
      - ./frontend_api:/app
    networks:
      - app-network

  admin_api:
    build:
      context: .
      dockerfile: admin_api/Dockerfile
    container_name: admin_api
    ports:
      - "8001:8001"
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - POSTGRES_SERVER=dpg-cuvatg1u0jms739hoe4g-a
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=7w65IRnPY3Pr6rEJlHUMKkCuXIEnjjZr
      - POSTGRES_DB=lbs_backend_api
      - POSTGRES_PORT=5432
      - DATABASE_URL=postgresql://admin:7w65IRnPY3Pr6rEJlHUMKkCuXIEnjjZr@dpg-cuvatg1u0jms739hoe4g-a.oregon-postgres.render.com/lbs_backend_api
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001
    volumes:
      - ./admin_api:/app
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  rabbitmq_data: